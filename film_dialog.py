# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'film_dialog.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import sqlite3

from PyQt5 import QtCore, QtGui, QtWidgets

import sys

from PyQt5.QtWidgets import QApplication, QDialog, QMainWindow, QPushButton


class Ui_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(370, 260)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(Dialog.sizePolicy().hasHeightForWidth())
        Dialog.setSizePolicy(sizePolicy)
        self.formLayoutWidget = QtWidgets.QWidget(Dialog)
        self.formLayoutWidget.setGeometry(QtCore.QRect(10, 10, 351, 231))
        self.formLayoutWidget.setObjectName("formLayoutWidget")
        self.formLayout = QtWidgets.QFormLayout(self.formLayoutWidget)
        self.formLayout.setContentsMargins(12, 0, 0, 0)
        self.formLayout.setHorizontalSpacing(60)
        self.formLayout.setVerticalSpacing(25)
        self.formLayout.setObjectName("formLayout")
        self.lineEdit = QtWidgets.QLineEdit(self.formLayoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit.sizePolicy().hasHeightForWidth())
        self.lineEdit.setSizePolicy(sizePolicy)
        self.lineEdit.setObjectName("lineEdit")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.lineEdit)
        self.label = QtWidgets.QLabel(self.formLayoutWidget)
        self.label.setObjectName("label")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label)
        self.label_2 = QtWidgets.QLabel(self.formLayoutWidget)
        self.label_2.setObjectName("label_2")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_2)
        self.label_3 = QtWidgets.QLabel(self.formLayoutWidget)
        self.label_3.setObjectName("label_3")
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.label_3)
        self.label_4 = QtWidgets.QLabel(self.formLayoutWidget)
        self.label_4.setObjectName("label_4")
        self.formLayout.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.label_4)
        self.pushButton = QtWidgets.QPushButton(self.formLayoutWidget)
        self.pushButton.setObjectName("pushButton")
        self.formLayout.setWidget(4, QtWidgets.QFormLayout.FieldRole, self.pushButton)
        self.spinBox = QtWidgets.QSpinBox(self.formLayoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.spinBox.sizePolicy().hasHeightForWidth())
        self.spinBox.setSizePolicy(sizePolicy)
        self.spinBox.setMaximum(2020)
        self.spinBox.setProperty("value", 2020)
        self.spinBox.setObjectName("spinBox")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.spinBox)
        self.comboBox = QtWidgets.QComboBox(self.formLayoutWidget)
        self.comboBox.setObjectName("comboBox")
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.comboBox)
        self.spinBox_2 = QtWidgets.QSpinBox(self.formLayoutWidget)
        self.spinBox_2.setMaximum(1000)
        self.spinBox_2.setProperty("value", 60)
        self.spinBox_2.setObjectName("spinBox_2")
        self.formLayout.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.spinBox_2)

        self.retranslateUi(Dialog)
        #self.pushButton.clicked.connect(Dialog.accept)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.label.setText(_translate("Dialog", "Название"))
        self.label_2.setText(_translate("Dialog", "Год выпуска"))
        self.label_3.setText(_translate("Dialog", "Жанр"))
        self.label_4.setText(_translate("Dialog", "Длина"))
        self.pushButton.setText(_translate("Dialog", "Сохранить изменения"))


def get_info():
    con = sqlite3.connect("films_db.sqlite")
    genres = [i[0] for i in con.execute("select title from genres").fetchall()]
    con.close()
    return genres


class FilmAddDialog(QDialog, Ui_Dialog):
    def __init__(self):
        super().__init__()
        self.setupUi(self)
        self.setWindowTitle("Добавление фильма")
        self.accepted = 0
        self.pushButton.clicked.connect(self.get_data)
        self.make_combo_box()

    def make_combo_box(self):
        for genre in get_info():
            self.comboBox.addItem(genre)

    def get_data(self):
        self.title = self.lineEdit.text()
        self.year = self.spinBox.text()
        self.genre = self.comboBox.currentText()
        self.duration = self.spinBox_2.text()
        self.accepted = 1
        self.accept()

    def exec_(self):
        super(FilmAddDialog, self).exec_()
        if self.accepted:
            return 1, self.title, self.genre, self.year, self.duration
        else:
            return 0,


class FilmEditDialog(FilmAddDialog):
    def __init__(self, title, year, genre, duration):
        super().__init__()
        self.lineEdit.setText(title)
        self.comboBox.setCurrentText(genre)
        self.spinBox.setValue(year)
        self.spinBox_2.setValue(duration)
        self.setWindowTitle("Редактирование фильма")


def except_hook(cls, exception, traceback):
    sys.__excepthook__(cls, exception, traceback)


if __name__ == "__main__":
    class Window(QMainWindow):
        def __init__(self):
            super().__init__()
            self.centralWidget = QPushButton("test")
            self.centralWidget.clicked.connect(self.film_testing)
            self.setCentralWidget(self.centralWidget)

        def film_testing(self):
            dlg = FilmAddDialog()
            print(dlg.exec_())


    app = QApplication(sys.argv)
    win = Window()
    win.show()
    sys.excepthook = except_hook
    sys.exit(app.exec())